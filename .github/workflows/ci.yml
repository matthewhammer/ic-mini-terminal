name: "build"
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  build_motoko_package:
    name: Build Motoko icmt package
    runs-on: ubuntu-latest
    env:
      DFX_VERSION: 0.7.2
    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: |
        echo y | DFX_VERSION=$DFX_VERSION bash -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"
        echo "/home/runner/bin" >> $GITHUB_PATH
        dfx cache install
    - name: BuildDeploy
      run: |
        dfx start --background
        dfx deploy --no-wallet Example

  build_mac_release:
    name: Build ic-mt for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            artifact_name: ic-mt
            asset_name: ic-mt-macos
    steps:
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: actions/checkout@v2
    - name: install_dependencies
      run: |
        brew install SDL2
        brew install rustup
        rustup-init -y --default-toolchain stable
    - name: Build
      run: cargo build --release --locked

  build_linux_release:
    name: Build ic-mt for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: ic-mt
            asset_name: ic-mt-linux64
    steps:
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: actions/checkout@v2
    - name: install_dependencies
      run: |
        sudo apt-get install libsdl2-dev
    - name: Build
      run: cargo build --release --locked

